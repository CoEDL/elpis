{
  parser: "@babel/eslint-parser",
  parserOptions: {
    requireConfigFile: false,
    babelOptions: {
      presets: ["@babel/preset-react"]
    }
  },
  plugins: ["@babel"],
  extends: [
    "eslint:recommended",
    "plugin:react/recommended"
  ],
  settings: {
    react: {
      version: "detect"
    }
  },
  rules: {
    "react/prop-types": "off",
    semi: ["error","always"],
    "eol-last": ["error", "always"],
    "comma-dangle": ["error",
      {
        arrays: "always-multiline",
        objects: "always-multiline",
        imports: "always-multiline",
        exports: "never"
      }],
    "quote-props": ["warn", "as-needed"],
    "jsx-quotes": ["error", "prefer-double"],
    quotes: ["error", "double"],
    "object-curly-spacing": ["error", "never"],
    "array-bracket-spacing": ["error", "never"],
    "template-curly-spacing": ["error", "never"],
    "space-in-parens": ["error", "never"],
    eqeqeq: ["error", "always"],
    "no-multi-spaces": "error",
    "key-spacing": "error",
    "space-infix-ops": "error",
    "max-len": ["error", {code: 120}],
    "padding-line-between-statements": [
      "error",
      // Always require blank lines after directive (like "use-strict"), except between directives
      {blankLine: "always", prev: "directive", next: "*"},
      {blankLine: "any", prev: "directive", next: "directive"},
      // Always require blank lines after import, except between imports
      {blankLine: "always", prev: "import", next: "*"},
      {blankLine: "never", prev: "import", next: "import"},
      // Always require blank lines before and after every sequence of variable declarations, but not between
      {blankLine: "always", prev: "*", next: ["const", "let", "var"]},
      {blankLine: "always", prev: ["const", "let", "var"], next: "*"},
      {blankLine: "never", prev: ["const", "let", "var"], next: ["const", "let", "var"]},
      // Always require blank lines before and after class declaration, if, do/while, switch, try
      {blankLine: "always", prev: "*", next: ["if", "class", "for", "do", "while", "switch", "try"]},
      {blankLine: "always", prev: ["if", "class", "for", "do", "while", "switch", "try"], next: "*"},
      // Always require blank lines before return statements
      {blankLine: "always", prev: "*", next: ["export", "return"]},
      {blankLine: "always", prev: "export", next: "*"},
      {blankLine: "never", prev: "export", next: "export"}
    ],
    "padded-blocks": ["error", "never"],
    "lines-between-class-members": ["error", "always"],
    "no-multiple-empty-lines": ["error", {max: 2}],
    "react/jsx-curly-spacing": ["error", {when: "never"}],
    "react/jsx-closing-tag-location": "error",
    "react/jsx-closing-bracket-location": "error",
    "react/jsx-first-prop-new-line": ["error", "multiline"],
    "react/jsx-wrap-multilines": ["error", {return: "parens-new-line"}],
    "react/jsx-indent": ["error", 4, {checkAttributes: true, indentLogicalExpressions: true}],
    "react/jsx-indent-props": ["error", {indentMode: 4, ignoreTernaryOperator: true}],
    "react/jsx-tag-spacing": ["error", {beforeSelfClosing: "always"}],
    "react/jsx-newline": ["error", {prevent: true}]
  },
  globals: {
    document: true,
    console: true,
    window: true,
    process: true,
    fetch: true,
    navigator: true,
    URL: true,
    setInterval: true,
    clearInterval: true,
    FormData: true,
    Set: true
  }
}
